[tox]
envlist = clean,py{38,39,310},report

[tool:pytest]
testpaths = tests
addopts =
    --cov-report=term-missing
    pytest_fixture_tools
    tests
    --pep8

[pytest]
pythonpath =
    src


[testenv]
setenv =
    py{39,310}: COVERAGE_FILE = .coverage.{envname}
    PICCOLO_CONF = piccolo_conf_test
# Avoiding doing this until deemed necessary to avert potential key usage runup disaster
# passenv = OPENAI_API_KEY

# piccolo test runner does not seem to read from .ini files so we set PICCOLO_CONF and
# call pytest directly
#commands = piccolo tester run --pytest_args="-s --cov {posargs:-vv} --asyncio-mode=auto"
commands = pytest -s --cov {posargs:-vv} --asyncio-mode=auto
deps =
    coverage
    pytest
    pytest-asyncio
    pytest-cov
    pytest-fixtures
    pytest-mock
    -rrequirements-dev.txt
depends =
    report: py39,310

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:report]
skip_install = true
deps = coverage
commands =
    coverage combine
    coverage report
    coverage html

[coverage:run]
branch = True

[coverage:report]
exclude_lines =
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods, they aren't run:
    @(abc\.)?abstractmethod

ignore_errors = True

[coverage:html]
directory = coverage
